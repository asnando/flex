// Número máximo de colunas onde o layout deverá se basear.
$number-of-cols: 12;

// Padding / Margin;
$gutter-width: 1em;
$gutter-compesation: ($gutter-width * 0.5) * -1;
$half-gutter-width: $gutter-width * 0.5;

// Viewports
$viewports: (
  // Extra small devices (portrait phones, less than 576px)
  // No media query since this is the default in Bootstrap
  "" 0px,
  "-xs" 0px,
  // Small devices (landscape phones, 576px and up)
  "-sm" 576px,
  // Medium devices (tablets, 768px and up)
  "-md" 768px,
  // Large devices (desktops, 992px and up)
  "-lg" 992px,
  // Extra large devices (large desktops, 1200px and up)
  "-xl" 1200px
);

%display-flex {
  display: flex;
  display: box;
  display: -webkit-box;
  display: -ms-flexbox;
}

%col-flex {
  box-sizing: border-box;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

@mixin flex-start {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: start;
}

@mixin flex-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

@mixin flex-end {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: end;
}

@mixin flex-top {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

@mixin flex-middle {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@mixin flex-bottom {
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}

@mixin flex-around {
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

@mixin flex-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

@mixin col-base {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  width: 100%;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
  // text-align: center;
}

@mixin col($index) {
  -ms-flex-preferred-size: (100% / $number-of-cols) * $index;
  flex-basis: (100% / $number-of-cols) * $index;
  max-width: (100% / $number-of-cols) * $index;
  width: (100% / $number-of-cols) * $index;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
  // text-align: center;
}

@mixin col-offset($index) {
  margin-left: (100% / $number-of-cols) * $index;
}

@mixin col-hide() {
  visibility: hidden;
}

[class*="col-"] {
  @extend %col-flex;
}

.row {
  @extend %display-flex;
  box-sizing: border-box;
  -webkit-box-flex: 0;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: $gutter-compesation;
  margin-left: $gutter-compesation;
}

@mixin make-col($vp-name, $index) {

  .col#{$vp-name} {
    @include col-base();
  }

  @for $index from 1 through $number-of-cols {
    .col#{$vp-name}-#{$index} {
      @include col($index);
    }
  }

  @for $index from 0 through ($number-of-cols - 1) {
    .col#{$vp-name}-offset-#{$index} {
      @include col-offset($index);
    }
  }

  .start#{$vp-name} {
    @include flex-start;
  }
  .center#{$vp-name} {
    @include flex-center;
  }
  .end#{$vp-name} {
    @include flex-end;
  }
  .top#{$vp-name} {
    @include flex-top;
  }
  .middle#{$vp-name} {
    @include flex-middle;
  }
  .bottom#{$vp-name} {
    @include flex-bottom;
  }
  .around#{$vp-name} {
    @include flex-around;
  }
  .between#{$vp-name} {
    @include flex-between;
  }
}

@mixin make-hidden-col($vp-name) {
  .col#{$vp-name}-hide,
  .hide#{$vp-name} {
    @include col-hide();
  }
}

@mixin make-col-by-media($vp-name, $index, $vp-min, $vp-max) {
  @if $vp-min and $vp-max {
    @media screen and (min-width: $vp-min) and (max-width: $vp-max) {
      @include make-hidden-col($vp-name);
    }
  } @else {
    @media screen and (min-width: $vp-min) {
      @include make-hidden-col($vp-name);
    }
  }
  @media screen and (min-width: $vp-min) {
    @include make-col($vp-name, $index);
  }
  // @media screen and (min-width: $vp-min) and (orientation: landscape) {
  //   .col#{$vp-name}-landscape-hide {
  //     @include col-hide();
  //   }
  // }
}

@each $vp in $viewports {

  $vp-name: nth($vp, 1);
  $vp-width: nth($vp, 2);
  $index: index($viewports, $vp);

  @if $vp-name == "" {
    $index: $index + 1;
  }

  $min: nth(nth($viewports, $index), 2);

  $max: null;

  @if $index == length($viewports) {
    $max: null;
  } @else {
    $max: nth(nth($viewports, $index + 1), 2);
  }

  @include make-col-by-media($vp-name, $index, $min, $max);
}