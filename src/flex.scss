// Número máximo de colunas onde o layout deverá se basear.
$number-of-cols: 12;

$col-gutter: 1em;

// Viewports
$vps: (
  // Extra small devices (portrait phones, less than 576px)
  // No media query since this is the default in Bootstrap
  "" 0px,
  "-xs" 0px,
  // Small devices (landscape phones, 576px and up)
  "-sm" 576px,
  // Medium devices (tablets, 768px and up)
  "-md" 768px,
  // Large devices (desktops, 992px and up)
  "-lg" 992px,
  // Extra large devices (large desktops, 1200px and up)
  "-xl" 1200px
);

%display-flex {
  display: flex;
  display: box;
  display: -webkit-box;
  display: -ms-flexbox;
}

%col-flex {
  box-sizing: border-box;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

@mixin col-original {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  width: 100%;
}

@mixin row-start {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: start;
}

@mixin row-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

@mixin row-end {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: end;
}

@mixin row-top {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

@mixin row-middle {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@mixin row-bottom {
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}

@mixin row-around {
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

@mixin row-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.row {
  @extend %display-flex;
  box-sizing: border-box;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@mixin col($index) {
  -ms-flex-preferred-size: (100% / $number-of-cols) * $index;
  flex-basis: (100% / $number-of-cols) * $index;
  max-width: (100% / $number-of-cols) * $index;
  width: (100% / $number-of-cols) * $index;
  padding: $col-gutter;
}

@mixin col-offset($index) {
  margin-left: (100% / $number-of-cols) * $index;
}

[class*="col-"] {
  @extend %col-flex;
}

@each $vp in $vps {

  $vp-name: nth($vp, 1);
  $vp-width: nth($vp, 2);

  @media only screen and (min-width: $vp-width) {

    .col#{$vp-name} {
      @include col-original();
    }

    @for $index from 1 through $number-of-cols {
      .col#{$vp-name}-#{$index} {
        @include col($index);
      }
    }

    @for $index from 0 through ($number-of-cols - 1) {
      .col#{$vp-name}-offset-#{$index} {
        @include col-offset($index);
      }
    }

    .start#{$vp-name} {
      @include row-start;
    }
    .center#{$vp-name} {
      @include row-center;
    }
    .end#{$vp-name} {
      @include row-end;
    }
    .top#{$vp-name} {
      @include row-top;
    }
    .middle#{$vp-name} {
      @include row-middle;
    }
    .bottom#{$vp-name} {
      @include row-bottom;
    }
    .around#{$vp-name} {
      @include row-around;
    }
    .between#{$vp-name} {
      @include row-between;
    }
  }
}